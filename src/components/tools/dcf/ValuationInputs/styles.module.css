.container {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.typeSelector {
  display: flex;
  gap: 1rem;
  padding: 0.5rem;
  background: var(--background);
  border-radius: 8px;
  position: relative;
}

.typeButton {
  flex: 1;
  padding: 0.75rem;
  border: none;
  border-radius: 6px;
  background: transparent;
  color: var(--text);
  cursor: pointer;
  position: relative;
  z-index: 1;
}

.typeButton.active {
  color: white;
}

.typeSelector::after {
  content: '';
  position: absolute;
  top: 0.5rem;
  left: 0.5rem;
  width: calc(50% - 1rem);
  height: calc(100% - 1rem);
  background: var(--primary-color);
  border-radius: 6px;
  transition: transform 0.2s ease-in-out;
  transform: translateX(0);
}

.typeSelector:has(.typeButton.active:last-child)::after {
  transform: translateX(calc(100% + 1rem));
}

.inputsContainer {
  position: relative;
  overflow: hidden;  /* Hide content that slides out */
}

.inputsWrapper {
  display: flex;
  width: 200%;  /* Make room for both input sections */
  transform: translateX(0%);
  transition: transform 0.3s ease-in-out;
}

.inputsWrapper.eps {
  transform: translateX(-50%);  /* Slide to show EPS section */
}

.inputSection {
  width: 50%;  /* Each section takes half of wrapper width */
  flex-shrink: 0;  /* Prevent shrinking */
  padding-right: 1rem;
}

.inputGroup {
  display: grid;
  grid-template-columns: 1fr 200px;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1rem;
  position: relative;
}

.inputGroup label {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-weight: 500;
}

.inputGroup input {
  width: 100%;
  padding: 0.5rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background: var(--input-background);
  color: var(--text-primary);
  text-align: center;
}

.inputGroup .inputSuffix {
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-secondary);
  pointer-events: none;
}

.inputGroup input[type="number"] {
  padding-right: 24px; /* Make room for the % suffix */
}

.inputGroup input:focus {
  outline: none;
  border-color: var(--primary-color);
}

.infoIcon {
  color: var(--text-secondary);
  cursor: help;
} 